cmake_minimum_required(VERSION 3.5.1)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)
set(OPT_CFLAGS "${OPT_CFLAGS} -DDEBUG")
find_package(DynamoRIO)
if (NOT DynamoRIO_FOUND)
  message(FATAL_ERROR "DynamoRIO package required to build")
endif(NOT DynamoRIO_FOUND)
option(OPTIMIZE_SAMPLES
  "Build samples with optimizations to increase the chances of clean call inlining (overrides debug flags)"
  ON)
if(SYSCALL)
  find_package(DrMemoryFramework)
  if (NOT DrMemoryFramework_FOUND)
    message(FATAL_ERROR "DrMemoryFramework package required to build")
  endif ()
  set(OPT_CFLAGS "${OPT_CFLAGS} -DPEEKABOO_SYSCALL")
  add_library(peekaboo_dr SHARED "peekaboo_dr.c;../libpeekaboo/libpeekaboo.c;syscalls.c")
  else ()
    add_library(peekaboo_dr SHARED "peekaboo_dr.c;../libpeekaboo/libpeekaboo.c;")
endif()
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OPT_CFLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OPT_CFLAGS}")
target_include_directories(peekaboo_dr PUBLIC ../libpeekaboo/)
configure_DynamoRIO_client(peekaboo_dr)
use_DynamoRIO_extension(peekaboo_dr drmgr)
use_DynamoRIO_extension(peekaboo_dr drutil)
use_DynamoRIO_extension(peekaboo_dr drreg)
use_DynamoRIO_extension(peekaboo_dr drx)
use_DynamoRIO_extension(peekaboo_dr droption)
if(SYSCALL)
  use_DynamoRIO_extension(peekaboo_dr drsyscall)
endif()

#use_DynamoRIO_extension(memval drmgr)
#use_DynamoRIO_extension(memval drutil)
#use_DynamoRIO_extension(memval drreg)
#use_DynamoRIO_extension(memval drx)
#use_DynamoRIO_extension(memval droption) 
